package view

script mainScript() {
	let removeListeners = [];

	window.onRemove = function (node, callback) {
		removeListeners.push({
			node: node,
			callback: callback
		});
	}

	var observer = new MutationObserver(function(mutations) {
		mutations.forEach(function(mutation) {
			var nodes = Array.from(mutation.removedNodes);

			nodes.forEach(removedNode => {
				for (var i = 0; i < removeListeners.length; ++i) {
					if (removedNode.contains(removeListeners[i].node)) {
						removeListeners[i].callback();
						removeListeners.splice(i, 1);
						--i;
					}
				}
			});
		});
	});

	observer.observe(document.body, {
		childList: true,
		subtree: true
	});

	var lastNode = null;

	function updateCaret(input) {
		const index = input.selectionStart;
		if (index != input.selectionEnd)
			return;

		const holder = me(".caret-holder", input.parentElement);
		holder.innerHTML =
			input.value.substring(0, index)+
			"<span class='bg-fg'>&nbsp;</span>"+
			input.value.substring(index);
		holder.styles({ left: (-input.scrollLeft).toString() });
	}

	document.addEventListener("selectionchange", function (e) {
		any(".caret-holder").run(e => {
			e.innerHTML = "";
		});

		if (e.target.nodeName == "INPUT" || e.target.nodeName == "TEXTAREA")
			updateCaret(e.target);
	});

	document.addEventListener("keydown", function (e) {
		setTimeout(() => {
			if (e.target.nodeName == "INPUT" || e.target.nodeName == "TEXTAREA")
				updateCaret(e.target);
		}, 0);
	});
}

templ Layout(content templ.Component) {
	<html>
		<head>
			<title>Keegan Beaulieu</title>
			<meta name="viewport" content="width=device-width, initial-scale=1.0">

			<script src="https://unpkg.com/htmx.org@2.0.3"></script>
			<script src="https://unpkg.com/htmx.org/dist/ext/json-enc.js"></script>
			<script src="https://cdn.jsdelivr.net/gh/gnat/surreal@main/surreal.js"></script>

			<link rel="stylesheet" href="/static/site.css">
		</head>
		<body class="bg-backdrop text-fg mono" onLoad={ mainScript() }>
			@content
        </body>
    </html>
}